plugins {
    id 'java-library'
    id 'etrustexweb.java-conventions'
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'org.springframework.boot:spring-boot-starter-data-ldap'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    api 'org.springframework.boot:spring-boot-starter-batch'
    implementation "org.apache.commons:commons-lang3:${commonsLang3Version}"
    implementation "javax.mail:mail:${javaxMailVersion}"
    implementation "javax.activation:activation:${javaxActivationVersion}"
    implementation 'org.springframework.boot:spring-boot-starter-json'
    implementation "commons-io:commons-io:${commonsIOVersion}"
    implementation "org.apache.pdfbox:pdfbox:${pdfBoxVersion}"
    implementation "eu.europa.ec.devco.com.github.ralfstuckert.pdfbox-layout:pdfbox2-layout:${pdfbox2LayoutVersion}"
    implementation "org.bouncycastle:bcpkix-jdk18on:${bouncycastleJdk18onVersion}"
    implementation "org.apache.poi:poi:${apachePoiVersion}"
    implementation "org.apache.poi:poi-ooxml:${apachePoiVersion}"
    implementation "com.google.code.findbugs:jsr305:${findbugsJsr305Version}"
    implementation "ognl:ognl:${ognlVersion}"
    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'
    implementation 'org.apache.httpcomponents.client5:httpclient5-fluent:5.2.1'

    implementation "org.springframework:spring-jms"
    implementation "javax.jms:javax.jms-api:${javaxJmsVersion}"

    implementation "net.javacrumbs.shedlock:shedlock-spring:${shedlockVersion}"
    implementation "net.javacrumbs.shedlock:shedlock-provider-jdbc-template:${shedlockVersion}"

    implementation "org.reflections:reflections:${reflectionsVersion}"

    implementation project(':etxweb-common')
    implementation project(':etxweb-exchange')
    api project(':etxweb-persistence:repository')

    compileOnly "javax.validation:validation-api:$validationApiVersion"

    testRuntimeOnly 'org.springframework:spring-web'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-mail'
    testImplementation "javax.validation:validation-api:$validationApiVersion"
    testImplementation "org.openjdk.jmh:jmh-core:${jmhVersion}"
    testImplementation "org.openjdk.jmh:jmh-generator-annprocess:${jmhVersion}"
    testImplementation(testFixtures(project(':etxweb-persistence:entity')))
    testImplementation(testFixtures(project(':etxweb-utils')))

    // used to test compliance of the JWS created in jws.spec.ts
    testImplementation "com.nimbusds:nimbus-jose-jwt:${nimbusJoseJwtVersion}"

    testFixturesImplementation "org.slf4j:slf4j-api:${testFixturesSl4jVersion}"
    testFixturesImplementation "ch.qos.logback:logback-classic:${testFixturesLogbackClassicVersion}"
    testFixturesImplementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    testFixturesImplementation project(':etxweb-exchange')
    testFixturesImplementation project(':etxweb-common')
}

dependencyManagement {
    imports { mavenBom("org.springframework.boot:spring-boot-dependencies:${springBootVersion}") }
}


tasks.register('copyCustomTemplates') {
    doLast {
        copy {
            from '../etxweb-persistence/repository/src/main/resources/db/changelog/files/templates'
            into 'build/resources/custom-templates'
            include '*.html'
            exclude 'README.md'
        }
    }
}

test.dependsOn copyCustomTemplates
